"use client"

import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { Card } from "@/components/ui/card"
import {
  ArrowRight,
  BookOpen,
  CheckCircle,
  Star,
  Users,
} from "lucide-react"
import ReactMarkdown from "react-markdown"

const academicPrograms = [
  
  {
    title: "L·ªò TR√åNH THUY·∫æT TR√åNH C·∫§P T·ªêC 3 BU·ªîI",
    content: "N·ªôi dung s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau.",
  },
  {
    title: "L·ªò TR√åNH HU·∫§N LUY·ªÜN 5+1 (TO√ÄN DI·ªÜN)",
    sessions: [
      "Bu·ªïi 1: X√¢y d·ª±ng Uy t√≠n & N·ªÅn t·∫£ng (Credibility)",
      "Bu·ªïi 2: C·∫•u tr√∫c L·∫≠p lu·∫≠n S·∫Øc b√©n (Structure)",
      "Bu·ªïi 3: K·ªÉ chuy·ªán b·∫±ng D·ªØ li·ªáu (Data Storytelling)",
      "Bu·ªïi 4: G√¢y ·∫£nh h∆∞·ªüng & Thuy·∫øt ph·ª•c (Influence)",
      "Bu·ªïi 5: L√†m ch·ªß Phi√™n H·ªèi-ƒê√°p & Ph·∫£n bi·ªán (Q&A Mastery)",
      
    ],
    outcomes: [
      "Di·ªÖn ƒë·∫°t √Ω t∆∞·ªüng ph·ª©c t·∫°p m·ªôt c√°ch chu·∫©n x√°c v√† tinh t·∫ø b·∫±ng Ti·∫øng Anh, tr√°nh c√°c l·ªói sai ng√¥ ngh√™ c√≥ th·ªÉ l√†m gi·∫£m uy t√≠n.",
      "S·ªü h·ªØu m·ªôt b·ªô t·ª´ v·ª±ng m·∫°nh (power vocabulary) v√† c√°c m·∫´u c√¢u chuy√™n nghi·ªáp c√≥ th·ªÉ √°p d·ª•ng ngay cho m·ªçi b√†i thuy·∫øt tr√¨nh kinh doanh.",
      "TƒÉng th·ªùi gian tr√¨nh b√†y n·ªôi dung chi·∫øn l∆∞·ª£c l√™n 30% v√¨ kh√¥ng c√≤n ph·∫£i v·∫•t v·∫£ d·ªãch trong ƒë·∫ßu t·ª´ Vi·ªát sang Anh.",
    ],
    target:
      "Ph√π h·ª£p v·ªõi ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu ho·∫∑c c·∫ßn chu·∫©n b·ªã cho m·ªôt b√†i thuy·∫øt tr√¨nh quan tr·ªçng",
    subtitle: "T·ª´ Zero ‚Üí Thuy·∫øt tr√¨nh t·ª± tin trong 5 bu·ªïi",
    description: "Cho ng∆∞·ªùi c·∫ßn thuy·∫øt tr√¨nh 1 b√†i quan tr·ªçng s·∫Øp t·ªõi",
  },
  {
    title: "L·ªò TR√åNH GIAO TI·∫æP TH·ª∞C CHI·∫æN 10 BU·ªîI",
    content: "N·ªôi dung s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau.",
  },
  {
    title: "L·ªò TR√åNH PH√ÅT TRI·ªÇN K·ª∏ NƒÇNG GIAO TI·∫æP CAO C·∫§P 20 BU·ªîI ",
    content: "N·ªôi dung s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau.",
  },
  {
    title: "L·ªò TR√åNH MASTERY ·ª®NG X·ª¨ 25 BU·ªîI",
    content: "N·ªôi dung s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau.",
  },
]

function ProgramCard({
  title,
  content,
  sessions,
  outcomes,
  target,
  subtitle,
  description,
}: {
  title: string
  content?: string
  sessions?: string[]
  outcomes?: string[]
  target?: string
  subtitle?: string
  description?: string
}) {
  const isQuickWin = title.includes("5+1")

  return (
    <Dialog>
      <DialogTrigger asChild>
        <div className="relative group transition-transform hover:scale-105 w-full sm:w-[320px] md:w-[340px] lg:w-[360px]">
          <Card className="h-[220px] overflow-hidden border-none rounded-2xl shadow-lg cursor-pointer transition-all duration-500 group-hover:shadow-yellow-400/30">
            <div className="relative h-full w-full z-10 bg-[#fdf6e3] group-hover:bg-gradient-to-br group-hover:from-[#f59e0b] group-hover:to-[#facc15] transition-all duration-500 rounded-2xl p-8 flex flex-col justify-between">
              <h3 className="text-xl font-bold text-gray-800 group-hover:text-white transition-colors duration-300">
                {title}
              </h3>
              <div className="flex justify-between items-center mt-6">
                <div className="w-9 h-9 rounded-full border border-gray-400 group-hover:border-white flex items-center justify-center">
                  <ArrowRight className="w-5 h-5 text-gray-600 group-hover:text-white" />
                </div>
              </div>
            </div>
            <div className="absolute inset-0 opacity-0 group-hover:opacity-10 group-hover:animate-pulse bg-white pointer-events-none rounded-2xl transition-all" />
          </Card>
        </div>
      </DialogTrigger>

      <DialogContent className="bg-white max-w-3xl text-gray-800 rounded-2xl shadow-2xl p-6 sm:p-8 overflow-y-auto max-h-[90vh]">
        <DialogHeader>
          <DialogTitle className="text-2xl font-bold text-yellow-600">
            {title}
          </DialogTitle>
        </DialogHeader>

        {isQuickWin ? (
          <div className="mt-4 space-y-4">
            <div className="bg-yellow-50 p-4 rounded-xl">
              <p className="text-lg font-semibold">{subtitle}</p>
              <p className="text-sm text-gray-600">{description}</p>
              <p className="mt-2 text-sm text-yellow-600 font-semibold">
                üìÖ 5 BU·ªîI + 1 BU·ªîI THE SIGNATURE 
                 <br /> T·ªïng h·ª£p c√°c kƒ© nƒÉng ƒë√£ h·ªçc ƒë·ªÉ th·ª±c hi·ªán 1 b√†i thuy·∫øt tr√¨nh ho√†n ch·ªânh, ƒë·ªãnh h√¨nh d·∫•u ·∫•n l√£nh ƒë·∫°o c·ªßa ri√™ng m√¨nh
              </p>
            </div>

            <div className="grid md:grid-cols-2 gap-6 mt-4">
              <div>
                <div className="flex items-center gap-2 text-yellow-600 font-semibold text-base mb-2">
                  <BookOpen className="w-5 h-5" />
                  N·ªôi dung kh√≥a h·ªçc
                </div>
                <ul className="space-y-2 text-sm text-gray-700 list-disc list-inside pl-2">
                  {sessions?.map((item, idx) => (
                    <li key={idx}>{item}</li>
                  ))}
                </ul>
              </div>
              <div>
                <div className="flex items-center gap-2 text-yellow-600 font-semibold text-base mb-2">
                  <Star className="w-5 h-5" />
                  L·ª£i √≠ch ƒë·∫°t ƒë∆∞·ª£c
                </div>
                <ul className="space-y-2 text-sm text-gray-700 list-disc list-inside pl-2">
                  {outcomes?.map((item, idx) => (
                    <li key={idx}>{item}</li>
                  ))}
                </ul>
              </div>
            </div>

            <div className="bg-blue-50 rounded-xl p-4 mt-6">
              <div className="flex items-center gap-2 font-semibold text-blue-700 mb-1">
                <Users className="w-5 h-5" />
                Ph√π h·ª£p v·ªõi:
              </div>
              <p className="text-sm text-blue-700">{target}</p>
            </div>
            <div className="flex justify-end mt-6">
      <a
        href="#"
        className="inline-block bg-yellow-500 hover:bg-yellow-600 text-white font-semibold py-2 px-5 rounded-xl transition-all duration-300 shadow-md hover:shadow-lg text-sm"
      >
        T√¨m hi·ªÉu ngay
      </a>
    </div>
  </div>
          
        ) : (
          <div className="mt-4 prose prose-sm prose-slate max-w-none">
            <ReactMarkdown>{content || ""}</ReactMarkdown>
          </div>
        )}
      </DialogContent>
    </Dialog>
  )
}

export default function AcademicProgramsSectionThemed() {
  return (
    <section className="py-20 bg-gradient-to-br from-gray-900 via-black to-gray-900 text-white">
      <div className="container mx-auto px-6">
        <div className="relative mb-8 border-b-2 border-[#d7a13d] pb-2 inline-block">
          <h2 className="text-3xl md:text-4xl font-bold tracking-widest uppercase">
            Ch∆∞∆°ng tr√¨nh h·ªçc
          </h2>
        </div>

        <div className="flex flex-wrap justify-center gap-8">
          {academicPrograms.map((program, index) => (
            <ProgramCard key={index} {...program} />
          ))}
        </div>
      </div>
    </section>
  )
}
